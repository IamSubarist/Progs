from db import Order, Active_Order, Settings, session
import datetime
from sqlalchemy import func

import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor

import re

vk_session = vk_api.VkApi(token = 'bc17c5430daf4e0ebd9817dc009091e616ce96fa32447d704b5eab77af6bbb58c1c21a588d61c3cf6dccd')
session_api = vk_session.get_api()
longpoll = VkLongPoll(vk_session)
print('–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.')

def sender(user_id, text, keyboard=None):
    post = {
            'user_id' : user_id,
            'message' : text,
            'random_id' : 0,
        }
    if keyboard != None:
        post['keyboard'] = keyboard.get_keyboard()
    else:
        post = post

    vk_session.method('messages.send', post)

def add_order():
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me:
            msg = event.text.lower()
            user_id = event.user_id
            msgup = msg.split()

            now = datetime.datetime.now()
            today_date = now.strftime('%d-%m-%Y')

            user_id = user_id
            tonnes = float(msgup[0])
            price = session.query(Settings).filter(Settings.user_id == user_id).first().price
            people = msgup[1]
            total_cash = float(tonnes) * float(price)
            your_cash = float(total_cash) / float(people)

            # user_id = user_id
            # tonnes = float(msg)
            # print(type(tonnes))
            # price = session.query(Settings).filter(Settings.user_id == user_id).first().price
            # people = session.query(Settings).filter(Settings.user_id == user_id).first().people
            # total_cash = float(tonnes) * float(price)
            # your_cash = float(total_cash) / float(people)

            act_order = Active_Order(user_id=user_id, tonnes=tonnes, people=people, total_cash=total_cash, your_cash=your_cash, date=today_date)
            session.add(act_order)
            session.commit()

            sender(user_id, '–ó–∞–∫–∞–∑ –æ–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—èüïì.\n–í—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ —Ä–∞–∑–¥–µ–ª–µ "–ê–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ãüïì"')

            active_orders()

            return main()

def profit():
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me:
            user_id = event.user_id
            msg = event.text.lower()
            msgup = msg.split()
            tonnes = float(msgup[0])
            price = session.query(Settings).filter(Settings.user_id == user_id).first().price
            people = msgup[1]

            profit_total = round(tonnes * int(price))
            profit_your = round(profit_total / float(people))

            sender(user_id, f'{msgup[0]} —Ç–æ–Ω–Ωüåæ\n{msgup[1]} —á–µ–ª–æ–≤–µ–∫–∞üë•\n\n–ö–∞–∂–¥—ã–π –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ {str(profit_your)}‚ÇΩüí∏\n–í—Å–µ–≥–æ –≤—ã –∑–∞—Ä–∞–±–æ—Ç–∞–µ—Ç–µ {str(profit_total)}‚ÇΩüí∏')

            return main()

def active_orders():
    for event in longpoll.listen():
        user_id = event.user_id

        for i in range(len(session.query(Active_Order).filter(Active_Order.user_id == user_id).all())):
            query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[i]

            user_id = query_data.user_id
            tonnes = query_data.tonnes
            people = query_data.people
            total_cash = query_data.total_cash
            your_cash = query_data.your_cash

            keyboard = VkKeyboard(inline=True)
            keyboard.add_button('–ó–∞–≤–µ—Ä—à–∏—Ç—å(' + str(i + 1) +')', color=VkKeyboardColor.PRIMARY)
            keyboard.add_line()
            keyboard.add_button('–û—Ç–º–µ–Ω–∏—Ç—å(' + str(i + 1) +')', color=VkKeyboardColor.NEGATIVE)

            sender(user_id,  '‚ï≠‚ïê‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚â™‚åò‚â´‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚ïÆ\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä–ê–∫—Ç–∏–≤–Ω—ã–π –∑–∞–∫–∞–∑üïì:\n\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(tonnes) + ' —Ç–æ–Ω–Ωüåæ\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(people) + ' —á–µ–ª–æ–≤–µ–∫–∞üë•\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(round(your_cash)) + '‚ÇΩ –ø—Ä–∏–±—ã–ª—åüí∏\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(round(total_cash)) + '‚ÇΩ –ø—Ä–∏–±—ã–ª—å –≤—Å–µ–≥–æüí∏\n', keyboard)

        return main()

def change_settings():
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me:
            msg = event.text.lower()
            user_id = event.user_id

            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–∞–π–ª–æ–≤
            emoji_pattern = re.compile("["
                u"\U0001F600-\U0001F64F"  # emoticons
                u"\U0001F300-\U0001F5FF"  # symbols & pictographs
                u"\U0001F680-\U0001F6FF"  # transport & map symbols
                u"\U0001F1E0-\U0001F1FF"  # flags (iOS)
                           "]+", flags=re.UNICODE)
            msg = emoji_pattern.sub(r'', msg)

            if msg == '—Ü–µ–Ω–∞ –∑–∞ —Ç–æ–Ω–Ω—É':
                current_total_cash = session.query(Settings).filter(Settings.user_id == user_id).first().price

                sender(user_id, '–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ' + str(current_total_cash))
                sender(user_id, '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:')

                for event in longpoll.listen():
                    if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                        keyboard = VkKeyboard()
                        keyboard.add_button('–ó–∞–∫–∞–∑üìû')
                        keyboard.add_line()
                        keyboard.add_button('–í—Å–µ–≥–æüìë')
                        keyboard.add_line()
                        keyboard.add_button('–ü—Ä–∏–±—ã–ª—åüí∏')
                        keyboard.add_line()
                        keyboard.add_button('–ù–∞—Å—Ç—Ä–æ–π–∫–∏üõ†')

                        prices = event.text.lower()
                        user_id = event.user_id

                        settings_price = session.query(Settings).filter(Settings.user_id == user_id).first()
                        settings_price.price = prices

                        sender(user_id, '–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã‚úî', keyboard)
                        return main()

            # if msg == '–∫–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫':
            #     current_total_cash = session.query(Settings).filter(Settings.user_id == user_id).first().people

            #     sender(user_id, '–¢–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: ' + str(current_total_cash))
            #     sender(user_id, '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –Ω–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:')

            #     for event in longpoll.listen():
            #         if event.type == VkEventType.MESSAGE_NEW and event.to_me:

            #             peoples = event.text.lower()
            #             user_id = event.user_id

            #             settings_people = session.query(Settings).filter(Settings.user_id == user_id).first()
            #             settings_people.people = peoples

            #             sender(user_id, '–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã‚úî')
            #             break

            # if msg == '–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é':
            #     keyboard = VkKeyboard()
            #     keyboard.add_button('–ó–∞–∫–∞–∑üìû')
            #     keyboard.add_button('–í—Å–µ–≥–æüìë')
            #     keyboard.add_button('–ü—Ä–∏–±—ã–ª—åüí∏')
            #     keyboard.add_line()
            #     keyboard.add_button('–ù–∞—Å—Ç—Ä–æ–π–∫–∏üõ†')

            #     sender(user_id, '–£–¥–∞—á–∏!üçÉ',keyboard)
            #     return main()

def main():
    for event in longpoll.listen():
        if event.type == VkEventType.MESSAGE_NEW and event.to_me:
            msg = event.text.lower()
            user_id = event.user_id

            # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–º–∞–π–ª–æ–≤
            emoji_pattern = re.compile("["
                u"\U0001F600-\U0001F64F"  # emoticons
                u"\U0001F300-\U0001F5FF"  # symbols & pictographs
                u"\U0001F680-\U0001F6FF"  # transport & map symbols
                u"\U0001F1E0-\U0001F1FF"  # flags (iOS)
                           "]+", flags=re.UNICODE)
            msg = emoji_pattern.sub(r'', msg)

            if msg == '–Ω–∞—á–∞—Ç—å':
                keyboard = VkKeyboard()
                keyboard.add_button('–ó–∞–∫–∞–∑üìû')
                keyboard.add_line()
                keyboard.add_button('–í—Å–µ–≥–æüìë')
                keyboard.add_line()
                keyboard.add_button('–ü—Ä–∏–±—ã–ª—åüí∏')
                keyboard.add_line()
                keyboard.add_button('–ù–∞—Å—Ç—Ä–æ–π–∫–∏üõ†')

                keyboard_two = VkKeyboard(inline=True)
                keyboard_two.add_button('–ù–∞—Å—Ç—Ä–æ–∏—Ç—å', color=VkKeyboardColor.PRIMARY)

                sender(user_id, '–ï—Å—Ç—å –¥–µ—Å–µ–ø—Ç–∏–∫–æ–Ω—ã...–µ—Å—Ç—å –∞–≤—Ç–æ–±–æ—Ç—ã...–∞ –µ—Å—Ç—å –∑–µ—Ä–Ω–æ–±–æ—Ç—ãüòπ\n\n' +
                    '‚ö†üìú–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:\n\n' +
                    'üìû–° –ø–æ–º–æ—â—å—é –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–∞–∑" –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑. –î–∞–Ω–Ω—ã–µ –æ –∑–∞–∫–∞–∑–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –∏ –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ.\n\n' +
                    'üìë–ö–Ω–æ–ø–∫–∞ "–í—Å–µ–≥–æ" –≤—ã–≤–µ–¥–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É.\n\n' +
                    'üõ†–ü–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. –≠—Ç–∞–ø –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —è–≤–ª—è–µ—Ç—Å—è –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–º –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è. –ü–æ—Å–ª–µ –ø–µ—Ä–≤–∏—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –ø–æ –º–µ—Ä–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏.\n\n' +
                    'üí∏–ö–Ω–æ–ø–∫–∞ "–ü—Ä–∏–±—ã–ª—å" –∑–∞–ø—É—Å–∫–∞–µ—Ç –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –≤–æ–∑–º–æ–∂–Ω–æ–π –ø—Ä–∏–±—ã–ª–∏, –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö.\n\n' +
                    '–ü—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ –±–æ—Ç—É –Ω—É–∂–Ω–æ –∑–Ω–∞—Ç—å —Ç–æ–ª—å–∫–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–Ω–Ω, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ(—Ü–µ–Ω—É –∑–∞ —Ç–æ–Ω–Ω—É –∏ –∫–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫, –≤—ã–ø–æ–ª–Ω—è—é—â–∏—Ö –∑–∞–∫–∞–∑)–æ–Ω –±–µ—Ä—ë—Ç –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏.\n' +
                    '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ, –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –±—É–¥—É—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ —Ü–µ–Ω–µ –∏–ª–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ª—é–¥–µ–π, —Å–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤–Ω–µ—Å—Ç–∏ –ø–æ–ø—Ä–∞–≤–∫–∏ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏, –∞ –∑–∞—Ç–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–∫–∞–∑.\n' +
                    '–ü–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ - –∑–∞–∫–∞–∑ —Å—á–∏—Ç–∞–µ—Ç—Å—è –∞–∫—Ç–∏–≤–Ω—ã–º –∏ –¥–∞–Ω–Ω—ã–µ –æ –Ω—ë–º –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ. –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–µ, –∑–∞–∫–∞–∑ –Ω—É–∂–Ω–æ –∑–∞–≤–µ—Ä—à–∏—Ç—å.\n\n' +
                    'üñä‚úâ–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º:\nhttps://vk.com/r_alexandrovich', keyboard)

                sender(user_id, '–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, –ø—Ä–µ–¥–ª–∞–≥–∞—é –ø–µ—Ä–µ–π—Ç–∏ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º. –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —É–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ü–µ–Ω–∞ –∑–∞ —Ç–æ–Ω–Ω—É –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ–ª–æ–≤–µ–∫, –≤—ã–ø–æ–ª–Ω—è—é—â–∏—Ö –∑–∞–∫–∞–∑', keyboard_two)

            if msg == '–Ω–∞—Å—Ç—Ä–æ–∏—Ç—å':
                keyboard = VkKeyboard()
                keyboard.add_button('–¶–µ–Ω–∞ –∑–∞ —Ç–æ–Ω–Ω—Éüí∏')
                # keyboard.add_button('–ö–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫üë•')
                # keyboard.add_line()
                # keyboard.add_button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô')

                settings = Settings(user_id=user_id, price=0)
                session.add(settings)
                session.commit()

                sender(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', keyboard)

                change_settings()

            if msg == '–Ω–∞—Å—Ç—Ä–æ–π–∫–∏':
                keyboard = VkKeyboard()
                keyboard.add_button('–¶–µ–Ω–∞ –∑–∞ —Ç–æ–Ω–Ω—Éüí∏')
                # keyboard.add_button('–ö–æ–ª-–≤–æ —á–µ–ª–æ–≤–µ–∫üë•')
                # keyboard.add_line()
                # keyboard.add_button('–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—éüîô')

                sender(user_id, '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', keyboard)

                change_settings()

            if msg == '–∑–∞–∫–∞–∑':
                sender(user_id, '–ù–∞ —Å–∫–æ–ª—å–∫–æ —Ç–æ–Ω–Ω?üåæ')

                add_order()
                
            if msg == '–≤—Å–µ–≥–æ':
                now = datetime.datetime.now()
                today_date = now.strftime('%d-%m-%Y')

                # –î–∞–Ω–Ω—ã–µ –∑–∞ –¥–µ–Ω—å –∏ –∑–∞ –≤—Å—ë –≤—Ä–µ–º—è.
                orders_count_total = session.query(func.count(Order.order_id)).filter(Order.user_id == user_id).all()[-1]
                orders_count_day = session.query(func.count(Order.order_id)).filter(Order.user_id == user_id).filter(Order.date == today_date).all()[-1]
                statistics_total = session.query(func.sum(Order.tonnes), func.sum(Order.total_cash), func.sum(Order.your_cash)).filter(Order.user_id == user_id).all()
                for statistics_total in statistics_total:
                    pass
                statistics_day = session.query(func.sum(Order.tonnes), func.sum(Order.total_cash), func.sum(Order.your_cash)).filter(Order.user_id == user_id).filter(Order.date == today_date)
                for statistics_day in statistics_day:
                    pass

                # –°–∞–º—ã–π —Ç—è–∂—ë–ª—ã–π –∑–∞–∫–∞–∑
                order_hard_total = session.query(Order.date, func.max(Order.tonnes), Order.people, Order.total_cash, Order.your_cash).filter(Order.user_id == user_id).all()
                for order_hard_total in order_hard_total:
                    pass

                # –°–∞–º—ã–π —Ç—è–∂—ë–ª—ã–π –¥–µ–Ω—å
                day_hard_total = session.query(Order.date, func.sum(Order.tonnes), func.count(Order.date), func.sum(Order.total_cash), func.sum(Order.your_cash)).group_by(Order.date).filter(Order.user_id == user_id).all()
                def custom_key(tonnes):
                    return tonnes[1]
                day_hard_total.sort(key=custom_key)

                sender(user_id, '‚ï≠‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚â™‚åò‚â´‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚ïÆ\n'
                    + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚Äî–ó–∞ —Å–µ–≥–æ–¥–Ω—è‚Äî\n' + str(orders_count_day[-1]) + ' –∑–∞–∫–∞–∑–æ–≤' + '‚†Ä' + str(statistics_day[0]) + ' —Ç–æ–Ω–Ωüåæ' + '‚†Ä' + str(statistics_day[1]) + '‚ÇΩüí∏\n\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(statistics_day[2]) + '‚ÇΩüí∏\n\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚Äî–ó–∞ –≤—Å—ë –≤—Ä–µ–º—è‚Äî\n' + str(orders_count_total[-1]) + ' –∑–∞–∫–∞–∑–æ–≤' + '‚†Ä' + str(statistics_total[0]) + ' —Ç–æ–Ω–Ωüåæ' + '‚†Ä' + str(statistics_total[1]) + '‚ÇΩüí∏\n\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(statistics_total[2]) + '‚ÇΩüí∏\n' +
                    '‚ï∞‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚â™‚åò‚â´‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚ïØ\n\n'
                    + '‡•™‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•™\n\n' +
                    '‚ï≠‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚â™‚åò‚â´‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚ïÆ\n'
                    + '‚†Ä‚†Ä‚†Ä‚Äî–°–∞–º—ã–π —Ç—Ä—É–¥–Ω—ã–π –∑–∞–∫–∞–∑‚Äî\n\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚Äî–ó–∞–∫–∞–∑ –æ—Ç ' + str(order_hard_total[0]) + '‚Äî\n\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(order_hard_total[1]) + ' —Ç–æ–Ω–Ωüåæ\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(order_hard_total[2]) + ' —á–µ–ª–æ–≤–µ–∫–∞üë•\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(order_hard_total[4]) + '‚ÇΩ –ø—Ä–∏–±—ã–ª—åüí∏\n' + '‚†Ä‚†Ä‚†Ä' + str(order_hard_total[3]) + '‚ÇΩ –ø—Ä–∏–±—ã–ª—å(–≤—Å–µ–≥–æ)üí∏\n' +
                    '‚ï∞‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚â™‚åò‚â´‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚ïØ\n\n'
                    + '‡•™‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•∞‡•™\n\n' +
                    '‚ï≠‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚â™‚åò‚â´‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚ïÆ\n'
                    + '‚†Ä‚†Ä‚†Ä‚Äî–°–∞–º—ã–π —Ç—Ä—É–¥–Ω—ã–π –¥–µ–Ω—å‚Äî\n\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚Äî' + str(day_hard_total[-1][0]) + '‚Äî\n\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(day_hard_total[-1][2]) + ' –∑–∞–∫–∞–∑–æ–≤\n' + str(day_hard_total[-1][1]) + ' —Ç–æ–Ω–Ωüåæ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(day_hard_total[-1][3]) + '‚ÇΩüí∏\n\n' + '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä' + str(day_hard_total[-1][4]) + '‚ÇΩüí∏' +
                    '‚ï∞‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚â™‚åò‚â´‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚îÄ‚îÄ‚ïê‚ïØ')

            if msg == '–ø—Ä–∏–±—ã–ª—å':
                sender(user_id, '–°–∫–æ–ª—å–∫–æ —Ç–æ–Ω–Ω?üåæ')

                profit()
            
            if msg == '–∑–∞–≤–µ—Ä—à–∏—Ç—å(1)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[0]
    
                user_id = query_data.user_id
                tonnes = query_data.tonnes
                people = query_data.people
                total_cash = query_data.total_cash
                your_cash = query_data.your_cash
                date = query_data.date

                orders = Order(user_id=user_id, tonnes=tonnes, people=people, total_cash=total_cash, your_cash=your_cash, date=date)
                session.add(orders)
                session.commit()
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–∑–∞–≤–µ—Ä—à–∏—Ç—å(2)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[1]

                user_id = query_data.user_id
                tonnes = query_data.tonnes
                people = query_data.people
                total_cash = query_data.total_cash
                your_cash = query_data.your_cash
                date = query_data.date

                orders = Order(user_id=user_id, tonnes=tonnes, people=people, total_cash=total_cash, your_cash=your_cash, date=date)
                session.add(orders)
                session.commit()
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–∑–∞–≤–µ—Ä—à–∏—Ç—å(3)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[2]

                user_id = query_data.user_id
                tonnes = query_data.tonnes
                people = query_data.people
                total_cash = query_data.total_cash
                your_cash = query_data.your_cash
                date = query_data.date

                orders = Order(user_id=user_id, tonnes=tonnes, people=people, total_cash=total_cash, your_cash=your_cash, date=date)
                session.add(orders)
                session.commit()
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–∑–∞–≤–µ—Ä—à–∏—Ç—å(4)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[3]

                user_id = query_data.user_id
                tonnes = query_data.tonnes
                people = query_data.people
                total_cash = query_data.total_cash
                your_cash = query_data.your_cash
                date = query_data.date

                orders = Order(user_id=user_id, tonnes=tonnes, people=people, total_cash=total_cash, your_cash=your_cash, date=date)
                session.add(orders)
                session.commit()
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–∑–∞–≤–µ—Ä—à–∏—Ç—å(5)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[4]

                user_id = query_data.user_id
                tonnes = query_data.tonnes
                people = query_data.people
                total_cash = query_data.total_cash
                your_cash = query_data.your_cash
                date = query_data.date

                orders = Order(user_id=user_id, tonnes=tonnes, people=people, total_cash=total_cash, your_cash=your_cash, date=date)
                session.add(orders)
                session.commit()
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–∑–∞–≤–µ—Ä—à–∏—Ç—å(6)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[5]

                user_id = query_data.user_id
                tonnes = query_data.tonnes
                people = query_data.people
                total_cash = query_data.total_cash
                your_cash = query_data.your_cash
                date = query_data.date

                orders = Order(user_id=user_id, tonnes=tonnes, people=people, total_cash=total_cash, your_cash=your_cash, date=date)
                session.add(orders)
                session.commit()
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –∑–∞–≤–µ—Ä—à—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã':
                order_count = session.query(func.count(Active_Order.order_id))[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–æ—Ç–º–µ–Ω–∏—Ç—å(1)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[0]
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–æ—Ç–º–µ–Ω–∏—Ç—å(2)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[1]
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–æ—Ç–º–µ–Ω–∏—Ç—å(3)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[2]
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–æ—Ç–º–µ–Ω–∏—Ç—å(4)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[3]
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–æ—Ç–º–µ–Ω–∏—Ç—å(5)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[4]
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

            if msg == '–æ—Ç–º–µ–Ω–∏—Ç—å(6)':
                query_data = session.query(Active_Order).filter(Active_Order.user_id == user_id).all()[5]
                session.delete(query_data)
                session.commit()

                sender(user_id, '–ó–∞–∫–∞–∑ –æ—Ç–º–µ–Ω—ë–Ω!‚úÖ\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ –≤—ã –∑–∞–Ω–µ—Å–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–í—Å–µ–≥–æüìë"')

                order_count = session.query(func.count(Active_Order.order_id)).filter(Active_Order.user_id == user_id)[-1][-1]
                if order_count != 0:
                    active_orders()
                else:
                    sender(user_id, '–ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ—Ç!üòå\n–ö–∞–∂–µ—Ç—Å—è, –º–æ–∂–Ω–æ –æ—Ç–¥–æ—Ö–Ω—É—Ç—å.üçÉ')

if __name__ == '__main__':
    main()